와일드카드는 제네릭 타입을 매개 값이나 리턴 타입으로 사용할 때 
구체적인 타입 대신 사용하는 것으로 코드에서 ?로 표현된다.

제네릭타입<?> : 모든 클래스 / 인터페이스 타입이 올 수 있다.
제네릭타입<? extend 상위타입> : 상위타입 또는 상위타입을 상속받은 하위 객체만 타입으로 
							지정할 수 있다.
제네릭타입<? super 하위타입> : 하위타입 또는 하위타입이 상속하고 있는 상위 객체만 타입으로
							지정할 수 있다. 
public void myMethod(ArrayList<? extends Number> list) { . . . }
메소드가 받아들일 매개변수 ArrayList 타입 변수는 Number 클래스와 
Number 클래스를 상속받은 클래스들의 객체들만 받는다라고 명시한 것 

>>제네릭 타입 범위 제한(Bound)<<
class Goods<T>{
	private T t;
	public T get(){
	return t;
}
public void set(T t){
	this.t= t;
}
제네릭 파라미터 <T>에 들어갈 수 있는 타입은?? 
D->C->B->A 유형이 있다고 할 때 유형별로 알아보기.

1. 접근지정자 메서드이름 ( 제네릭 클래스명<제네릭 타입명> 참조변수명){ }  
ex)  method(Goods<A> v)  -: A타입만 가능하다. 
2. 접근지정자 메서드이름(제네릭 클래스명 <?> 참조변수명) {}
ex) method(Goods<?> v) -: A, B, C, D 타입 모두 가능하다. 
3. 접근지정자 메서드이름 ( 제네릭 클래스명<? extends 제네릭 타입명> 참조변수명){ }  
ex) method(Goods<? extends B> v) : B, C, D만 가능하다.
4. 접근지정자 메서드이름 ( 제네릭 클래스명<? super 제네릭 타입명> 참조변수명){ }  
ex) method(Goods<? super B> v) : A, B만 가능하다

							